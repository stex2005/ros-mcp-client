name: Track Download Metrics via GitHub App

on:
  schedule:
    - cron: "0 */2 * * *"    # Every 2 hours
  workflow_dispatch:

jobs:
  track-download-metrics:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: metrics
          fetch-depth: 0

      - name: Authenticate as GitHub App
        id: generate_token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Retrieve download data
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          mkdir -p .metrics
          echo "Fetching download data for ${{ github.repository }}..."
          
          # Fetch all pages of releases
          curl -s -H "Authorization: Bearer $TOKEN" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/repos/${{ github.repository }}/releases?per_page=100" \
               > .metrics/releases.json
          
          echo "Raw releases data (first 3 releases):"
          jq '.[0:3] | .[] | {tag_name, assets_count: (.assets | length), assets: [.assets[] | {name: .name, download_count: .download_count}]}' .metrics/releases.json
          
          # Extract download counts from releases
          jq '[.[] | {tag_name: .tag_name, published_at: .published_at, assets: [.assets[] | {name: .name, download_count: .download_count}]}]' .metrics/releases.json > .metrics/downloads.json
          
          echo "Download data summary:"
          jq '[.[] | {tag: .tag_name, date: .published_at, total_downloads: ([.assets[].download_count] | add), assets_count: (.assets | length)}]' .metrics/downloads.json

      - name: Update unified download metrics CSV
        run: |
          mkdir -p .metrics
          CSV=".metrics/download_metrics.csv"

          (echo "date,release_tag,total_downloads"; \
           jq -r '.[] | "\(.published_at[0:10]),\(.tag_name),\([.assets[].download_count] | add)"' \
            .metrics/downloads.json) > "$CSV"

          echo "Updated metrics summary:"
          tail -n 5 "$CSV"

      - name: Commit and push results
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          git config user.name "DownloadMetrics[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add .metrics/download_metrics.csv
          git commit -m "Automated update: repository download metrics" || echo "No new data to commit."
          git pull --rebase origin metrics || true
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD
