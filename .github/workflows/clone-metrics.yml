name: Track Clone Metrics via GitHub App

on:
  schedule:
    - cron: "30 4 * * *"    # Daily at 04:00 UTC
  workflow_dispatch:

jobs:
  track-clone-metrics:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate as GitHub App
        id: generate_token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Retrieve clone data
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          mkdir -p .metrics
          echo "Fetching clone data for ${{ github.repository }}..."
          curl -s -H "Authorization: Bearer $TOKEN" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/repos/${{ github.repository }}/traffic/clones?per=day" \
               > .metrics/clones.json
          jq '. | {total_14d: .count, unique_14d: .uniques, days: (.clones|length)}' .metrics/clones.json

      - name: Update unified clone metrics CSV
        run: |
          mkdir -p .metrics
          CSV=".metrics/clone_metrics.csv"

          TOTAL=$(jq '.count' .metrics/clones.json)
          UNIQUE_TOTAL=$(jq '.uniques' .metrics/clones.json)

          if [ ! -f "$CSV" ]; then
            echo "date,clones,unique_cloners,total_clones_14d,unique_cloners_14d" > "$CSV"
          fi

          jq -r --arg total "$TOTAL" --arg uniques "$UNIQUE_TOTAL" \
            '.clones[] | "\(.timestamp[0:10]),\(.count),\(.uniques),\($total),\($uniques)"' \
            .metrics/clones.json \
          | while IFS= read -r line; do
              date=$(echo "$line" | cut -d',' -f1)
              if ! grep -q "^$date," "$CSV"; then
                echo "$line" >> "$CSV"
              fi
            done

          echo "Updated metrics summary:"
          tail -n 5 "$CSV"

      - name: Commit and push results
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          git config user.name "CloneMetrics[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add .metrics/clone_metrics.csv
          git commit -m "Automated update: repository clone metrics" || echo "No new data to commit."
          git pull --rebase origin develop || true
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD
